{"version":3,"sources":["components/Header.jsx","firebase.js","components/ProductComponent.jsx","components/Menu.jsx","components/ItemOrder.jsx","components/OrderProducts.jsx","Views/Order-View.js","components/ItemKitchen.jsx","components/ProductKitchen.jsx","components/OrderKitchen.jsx","Views/Kitchen-View.js","components/ReadyOrders.jsx","components/ReadyOrdersKitchen.jsx","Views/Ready-View.js","Route.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","src","alt","to","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ProductComponent","dataDeUnProducto","addProductsList","totClient","addProductItem","totalCta","obj1","useState","quant","setQuant","totalCount","data-testId","Descripcion","Precio","name","onClick","data-testid","event","preventDefault","id","desc","price","quantity","valor1","alert","Cantidad","objTotal","buttonTotal","MenuComponent","addProduct","totalClient","menu","setMenu","useCollection","firestore","collection","snapshotListenOptions","includeMetadataChanges","value1","loading","click","nombreDeLaCategoria","result","docs","map","elem","Categoria","data","filter","obj","key","ItemOrder","delOrderProduct","OrderProducts","productsOrder","resetOrder","sendOrder","delProduct","client","setClient","onChange","valor","target","value","index","console","log","Cliente","Order","Total","Fecha","Date","OrderView","setProductOrder","totalCountCli","setTotalCountCli","Menu","newArray","resetCant","findEleDel","find","ele","posdEleDel","indexOf","delArrProducts","splice","res","newArrayDel","add","then","objeto","doc","update","ID","Estado","Tiempo_Espera","ItemKitchen","descOrder","Producto","ProductKitchen","dataProduct","Nombre","Pedido","hour","setHour","type","date","toString","timeEnd","substring","hourF","fech3","seconds","Math","floor","minute","second","secondsToString","getTime","el","OrderKitchen","kitchen","setKitchen","useCollectionData","orderBy","arrKitchen","toDate","waitOrders","KitchenView","ReadyOrders","ReadyOrdersKitchen","readyOrdersKitchen","setReadyOrdersKitchen","arrReadyOrdersKitchen","readyOrders","ReadyView","Routes","exact","path","component","App","Route","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.73854b0c.chunk.js","sourcesContent":["import React from 'react';\nimport '../index.css';\nimport { Link }from 'react-router-dom'\n\n  const Header= () =>{\n    const element= (\n         <header className='logoheader'>   \n          <h1 className='title-logo'>BURGUER QUEEN</h1>\n          <img src='queenBurguer1.png' className=\"img-logo\" alt=\"logo\"/> \n          <nav className=\"navbar-header navbar navbar-right\">\n          <ul className=\"active navbar-brand navbar navbar-right\">\n            <li>\n              <Link className='linkis' to='/KitchenView'> Ordenes en espera </Link>\n              <Link className='linkis' to='/ReadyView'> Ordenes listas</Link>\n            </li>\n          </ul>\n          </nav>\n          </header>\n    );\n    return element;\n  }\nexport default Header;","import firebase from 'firebase/app';\nimport 'firebase/firestore'\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCQHizDST_D3mkJnrBntDXGa9mr_l9fFLI\",\n    authDomain: \"reactproject-9baf3.firebaseapp.com\",\n    databaseURL: \"https://reactproject-9baf3.firebaseio.com\",\n    projectId: \"reactproject-9baf3\",\n    storageBucket: \"reactproject-9baf3.appspot.com\",\n    messagingSenderId: \"12844446518\",\n    appId: \"1:12844446518:web:a7faeda7f59142c7587997\",\n    measurementId: \"G-DR0LFD0X9F\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\n export default firebase;\n\n ","import React, { useState } from 'react';\nimport '../index.css';\n\nconst ProductComponent = ({ dataDeUnProducto, addProductsList, totClient }) => {\n  const addProductItem = addProductsList;\n  const totalCta = totClient;\n  const obj1 = dataDeUnProducto;\n  const [quant, setQuant] = useState(0);\n\n  const moreQuantity = () => {\n    //event.preventDefault();\n    setQuant(quant + 1);\n  }\n  const lessQuantity = () => {\n    if(quant === 0) {\n      setQuant(0);\n    } else{ \n      setQuant(quant - 1);\n    }   \n  }  \n  function addItemProduct (id, desc, price, quantity) {  \n    if (quantity === '' ) {\n      alert('Falta ingresar la cantidad');\n    }\n    else {\n      const addItemProductObj = {\n        id: id,\n        Descripcion: desc,\n        Precio: price,\n        Cantidad: quantity,\n      };\n      addProductItem(addItemProductObj);\n    }  \n  }\n  let totalCount = 0;\n  const buttonTotal = (objTotal) => {\n    const price= objTotal.Precio;\n    const quantity = quant;\n    totalCount += (price * quantity);\n    totalCta(totalCount); \n  };\n\nconst element = (\n  <li className='menu-item-list' >\n    <p data-testId='idItem' className='elements' >{obj1.Descripcion}</p>\n    <p data-testId='idItem' className='numbers' >S/.{obj1.Precio}</p>\n    <button name='lessQuantity' className='less1' onClick = {lessQuantity}><img src=\"less.jpg\" className='less' alt='less'/></button>\n    <p className='numbers' data-testid='item'> { quant }</p>\n    <button className='more' onClick = {moreQuantity}><img src=\"plus.png\" alt='plus'/></button>\n    <p className='numbers'>\n      <button className='more' onClick={(event)=> {\n        event.preventDefault();\n        const valor1 = quant;\n        addItemProduct(obj1.id, obj1.Descripcion, obj1.Precio, valor1);\n        buttonTotal(obj1);\n        }}><img src=\"flecha.png\" className='arrow' alt='arrow'/> \n      </button>\n    </p>\n  </li>\n)\nreturn element;\n}\nexport default ProductComponent","import React, {useState} from 'react';\nimport '../index.css';\nimport firebase from '../firebase';\nimport { useCollection } from 'react-firebase-hooks/firestore';\nimport ProductComponent from '../components/ProductComponent';\n\nfunction MenuComponent({addProduct, totalClient}) {\n  const [menu, setMenu]=useState([]);\n  const [value1, loading] = useCollection(\n    firebase.firestore().collection('Products'),\n      {\n        snapshotListenOptions: { includeMetadataChanges: true },\n      }\n  );\n    \n  function click(nombreDeLaCategoria){\n    const arrProducts = value1.docs.map((elem) => {\n      const obj = {\n        Categoria: elem.data().Categoria,\n        Descripcion: elem.data().Descripcion,\n        Precio: elem.data().Precio,\n        id: elem.id,\n      }\n        return obj;\n      });\n    const result = arrProducts.filter((elem) => elem.Categoria === nombreDeLaCategoria);\n    setMenu(result);\n  }\n  \n  const element= (\n      <aside id='menuClass' className='menuClass'>\n       <div className=\"titleTabs\">\n         <button className=\"tablinks\" onClick={(event) => {\n            event.preventDefault();\n            click('Desayuno')\n         }}>DESAYUNO</button>\n         <button className=\"tablinks\" onClick={(event) => {\n           event.preventDefault();\n           click('Menu')\n         }}>MENU</button>\n         <button className=\"tablinks\" onClick={(event) => {\n           event.preventDefault();\n         click('Acompañamientos')\n         }}>ACOMPAÑAMIENTOS</button>\n         <button className=\"tablinks\" onClick={(event)=>{\n           event.preventDefault();\n         click('Bebidas')\n         }}>BEBIDAS</button>\n      </div>\n      <div className='tabContent'> \n        <ul className='menu-list'>\n          {/* menu.length === 0 ?\n          'cargando productos' : */\n          loading ?\n          'Cargando productos...' :\n          menu.map((obj) => \n           <ProductComponent data-testid='IdItem' key={obj.id}\n           dataDeUnProducto={obj}\n           addProductsList={addProduct}\n           totClient={totalClient}  />\n        )}\n        </ul>\n       </div>\n      </aside>\n    );\n    return element;\n  }\nexport default MenuComponent;\n","import React from 'react';\n\nconst ItemOrder = ({ data, delOrderProduct }) => {\n    const { id, Descripcion, Precio, Cantidad  } = data;\n    \n    const btnEliminarItem = (event)  => {\n        event.preventDefault();\n        const idItem = id;\n        delOrderProduct(idItem);\n        \n    };\n    \n    return (\n    <li className='menu-item-list-order'>\n         <p className='numbers' data-testid='item'> { Cantidad }</p>\n        <p className='elements' data-testid='item'>{ Descripcion }</p>\n        <p className='numbers' data-testid='item'> { Precio }</p>\n        <button onClick={btnEliminarItem} className='numbers' >\n            <img src=\"delete-forever.png\" className='btnDelete' alt='delete' ></img>\n        </button>\n    </li> \n    )\n};\nexport default ItemOrder;","import React, {useState} from 'react';\nimport ItemOrder from './ItemOrder'\n\nconst OrderProducts = ({ productsOrder, totalClient, resetOrder, sendOrder, delProduct}) => {\n   \n    const [client,setClient] = useState('');\n\n    const eventChange = (event) => {\n        const valor= event.target.value;\n        setClient(valor);\n    }\n  \n    const sendOrderKitchen = () => {\n        if (client === '') {\n            alert('Ingrese nombre del cliente');\n        }\n        else {\n            console.log(productsOrder); \n            const obj1 = {\n                Cliente: client,\n                Order: productsOrder,\n                Total: totalClient,\n                Fecha: new Date(),\n               \n        }\n        console.log(obj1);\n        sendOrder(obj1);\n        resetOrder();\n        setClient('');\n        alert('La orden se envió con éxito');\n        } \n    };\n    \n            \n\n    const element = (\n        <section  className='orderClass' >\n       <div>\n       \n       <br></br><span className=\"label label-danger\">Nombre del cliente:</span> <input className='input-name' onChange={eventChange} value={client} ></input></div>\n       <br></br>\n        <div className=\"titleTabsOrder\"> \n         <button>Cantidad</button>\n         <button>Producto</button>\n         <button>Precio (S/.)</button>\n         <button>Eliminar</button>\n        </div>\n        <div className='tabContentOrder'>\n        <ul className='menu-list-order'>\n                {productsOrder.map((obj, index) => <ItemOrder data-testid='item' key= {index} data={obj} delOrderProduct={delProduct}  />)}        \n            </ul>\n        <div className='total' >\n        <label /* onClick={buttonTotal} */ >TOTAL</label>\n         <p>S/.{totalClient}</p>\n        </div>\n        <div>\n        <button className='btn btn-danger' onClick={sendOrderKitchen} >ENVIAR ORDEN</button>\n       \n        </div>\n\n        </div>  \n       \n        \n        \n        </section>\n        \n    );\n    return element;\n\n}\n\nexport default OrderProducts;","import React, { useState } from 'react';\n//import './App.css';\nimport '../index.css';\nimport Header from '../components/Header.jsx';\nimport MenuComponent from '../components/Menu.jsx';\nimport OrderProducts from '../components/OrderProducts.jsx';\nimport firebase from '../firebase';\n\nfunction OrderView() {\n  const [productsOrder, setProductOrder] = useState([]);\n  const [totalCountCli, setTotalCountCli]= useState(0);\n\n  const addProductItemOrderr = (obj) => {\n    const newArray = [...productsOrder, obj];\n    setProductOrder(newArray);\n  };\n \n  const totClient = (valor) => {\n    setTotalCountCli(totalCountCli + valor);\n  }\n\n  const delProductItemOrder = (id) => {\n    const findEleDel = productsOrder.find(ele =>ele.id === id );\n    const posdEleDel = productsOrder.indexOf(findEleDel);\n    const delArrProducts = productsOrder.splice(posdEleDel, 1);\n    let mapPrecio = delArrProducts.map(ele => ele.Precio);\n    const price=mapPrecio[0];\n    let mapCantidad = delArrProducts.map(ele => ele.Cantidad);\n    const quantity = mapCantidad[0];\n    const res= totalCountCli - (price * quantity);\n    const newArrayDel = [...productsOrder];\n    setProductOrder(newArrayDel);\n    setTotalCountCli(res);\n  };\n   \n  const sendOrder = (obj) => {\n    firebase.firestore()\n    .collection('orders')\n    .add({\n      obj\n    }).then(objeto => {\n      console.log(objeto.id)\n      firebase.firestore()\n      .collection('orders').doc(objeto.id).update({\n        ID: objeto.id,\n        Estado: '',\n        Tiempo_Espera: '',\n      })   \n    })\n   }\n   \n  const resetOrder = () => {\n    setProductOrder([]);\n    setTotalCountCli(0);\n  }\n  \n  return (\n    <main className='display-flex'>\n      <Header />\n      <MenuComponent addProduct={addProductItemOrderr} totalClient={totClient} resetCant = {productsOrder} />\n      <OrderProducts productsOrder={productsOrder} delProduct={delProductItemOrder} totalClient={totalCountCli} sendOrder={sendOrder} resetOrder = {resetOrder} />\n    </main>\n  );\n}\n\nexport default OrderView;\n","import React from 'react';\n\nconst ItemKitchen = ({ descOrder }) => {\n    const { Producto, Cantidad } = descOrder;\n\n    const element = (\n     \n        <li className=\"card bg-info \">\n        <p  data-testid='IdItem' > {Cantidad} {Producto}</p>\n        </li>\n    ); \n    return element;\n\n}\nexport default ItemKitchen;","import React from 'react';\nimport ItemKitchen from './ItemKitchen'\nimport { useState } from 'react';\nimport firebase from '../firebase';\n\nconst ProductKitchen = ({ dataProduct }) => {\n  const { Nombre, Pedido, Fecha, ID } = dataProduct;\n  const [hour, setHour]=useState('');\n  \n  const secondsToString = (seconds) => {\n    let hour = Math.floor(seconds / 3600);\n    hour = (hour < 10)? '0' + hour : hour;\n    let minute = Math.floor((seconds / 60) % 60);\n    minute = (minute < 10)? '0' + minute : minute;\n    let second = seconds % 60;\n    second = (second < 10)? '0' + second : second;\n  return hour + ':' + minute + ':' + second;\n}\n\nconst delayTime = () => {\n  let date =  new Date().toString();\n  const timeEnd = new Date(date.substring(0, date.indexOf('GMT')));\n  const hourF= new Date(Fecha);\n  const fech = timeEnd.getTime() - hourF.getTime();\n  const fech2= fech/1000;\n  const fech3=secondsToString(fech2);\n  setHour(fech3);\n  firebase.firestore().collection('orders').doc(ID).update({\n    Estado: 'listo',\n    Tiempo_Espera: fech3,\n  });\n};\n\nconst element = (\n  <li className=\"card bg-warning \">\n    <ul >\n      <span><p data-testid='IdItem'><label >Cliente:</label> { Nombre }</p></span>\n      <p data-testid='IdItem'><label>Toma de pedido: </label> { Fecha }</p>\n      <label>Estado del Pedido:  </label>\n      <input type=\"checkbox\" className='chkbox' onChange={delayTime}></input><br /> \n      <span><label >Tiempo de espera: </label><p>{hour}</p></span> \n      <div className='colorDetOrd'>\n        <label>Detalle del Pedido</label>\n        { \n          Pedido.map((el, index) =>\n          <ItemKitchen data-testid='IdItem' key='index' descOrder={el} />)\n         }\n      </div> \n    </ul>      \n  </li>\n)\nreturn element;\n}\n\nexport default ProductKitchen;","import React, {useState} from 'react';\nimport firebase from '../firebase';\nimport { useCollectionData} from 'react-firebase-hooks/firestore';\nimport ProductKitchen from './ProductKitchen';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Link }from 'react-router-dom'\nimport '../index.css';\n\nconst OrderKitchen = () => {\n  const [kitchen, setKitchen] = useState([]);\n    const [value] = useCollectionData(\n      firebase.firestore().collection('orders').orderBy('obj.Fecha','asc' ),\n    );\n  \nconst waitOrders =()=>{\n  const filterArr= value.filter(ele => ele.Estado === '')\n    const arrKitchen = filterArr.map((elem)=>{\n      let date = elem.obj.Fecha.toDate().toString(); \n        const objKitchen = {\n          ID: elem.ID,\n          Estado: elem.Estado,\n          Nombre: elem.obj.Cliente,\n          Fecha: date.substring(0, date.indexOf('GMT')),\n          Pedido: elem.obj.Order.map((ele)=>{\n            const objOrder = {\n              Producto: ele.Descripcion,\n              Cantidad: ele.Cantidad,\n            }\n            return objOrder;\n          }), \n        }  \n        return objKitchen;   \n    })\n  const result = arrKitchen;\n  setKitchen(result);  \n};\n    \nconst element = (\n  <section className='container' >\n    <div className='container'>\n      <div className = 'row'>\n        <nav className=\"navbar-brand navbar-header navbar-fixed-top navbar-right\">\n          <div className=\"container-fluid\">\n            <ul className=\"active navbar-brand navbar-right\">\n              <li className='view'>\n               {/*  <Link to='/OrderView'>  Vista Orden </Link> */}\n                <Link to='/OrderView'>\n                  <img src=\"back2.jpeg\" className='back' alt='back' ></img>\n                </Link>\n              </li>\n            </ul>\n            <button\n              className=\"btn btn-danger navbar-btn navbar-brand navbar-header\"\n              onClick = {(event)=> {\n                 event.preventDefault();\n                 waitOrders();\n              }}>\n                Mostrar Ordenes en espera\n              </button>  \n          </div>\n        </nav>\n      </div>\n      <div className='row'>\n        <div className='row'>\n          <div className = 'col-sm-12'>\n            <div className = 'card-columns'> \n              <ul>\n                { \n                  kitchen.map((ele, index)=>\n                    <ProductKitchen key={index} dataProduct={ele} />\n                  )\n                }  \n              </ul> \n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section> \n)\nreturn element;\n}\nexport default OrderKitchen;","import React from 'react';\nimport OrderKitchen from '../components/OrderKitchen';\n//import ReadyOrdersKitchen from '../components/ReadyOrdersKitchen'\nimport '../index.css';\n\n//import firebase from '../firebase';\n\nconst KitchenView = () => {\n    return (\n        <main className='container'>\n           \n            <OrderKitchen />\n        </main>\n    );\n}\nexport default KitchenView;\n","import React from 'react';\nimport ItemKitchen from './ItemKitchen'\n\nconst ReadyOrders = ({ dataProduct }) => {\n  const { Nombre, Estado, Pedido } = dataProduct;\n    const element = (\n      <li className=\"card bg-warning \">\n        <ul>\n          <span><p data-testid='IdItem'><label>Cliente:</label> { Nombre }</p></span>\n          <p data-testid='IdItem'><label>Estado del Pedido:  </label>{ Estado}</p>\n          <div className='colorDetOrd'>\n          <label>Detalle del Pedido</label>\n          { \n            Pedido.map((el, index)=>\n            <ItemKitchen key='index' data-testid='IdItem' descOrder={el} />)\n          }\n          </div>\n        </ul>      \n      </li>\n    )\n    return element;\n}\n\nexport default ReadyOrders;","import React, {useState} from 'react';\nimport firebase from '../firebase';\nimport { useCollectionData} from 'react-firebase-hooks/firestore';\nimport ReadyOrders from './ReadyOrders';\nimport { Link }from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '../index.css';\n\nconst ReadyOrdersKitchen = () => {\n  const [readyOrdersKitchen, setReadyOrdersKitchen] = useState([]);  \n  const [value] = useCollectionData(\n    firebase.firestore().collection('orders').orderBy('obj.Fecha','asc' ),\n  );\n  \n  const readyOrders =()=>{\n    const filterArr = value.filter(ele => ele.Estado === 'listo' );\n      const arrReadyOrdersKitchen = filterArr.map((elem)=>{  \n        let date = elem.obj.Fecha.toDate().toString(); \n        const objReadyOrdersKitchen = {\n          ID: elem.ID,\n          Estado: elem.Estado,\n          Nombre: elem.obj.Cliente,\n          Fecha: date.substring(0, date.indexOf('GMT')),\n          Pedido: elem.obj.Order.map((ele)=>{\n            const objOrder = {\n              Producto: ele.Descripcion,\n              Cantidad: ele.Cantidad,\n            }\n            return objOrder;\n          }), \n        }  \n      return objReadyOrdersKitchen;   \n    })\n    const result = arrReadyOrdersKitchen;\n    setReadyOrdersKitchen(result); \n  };  \n    \n  const element = (\n    <section className='container' >\n      <div className='container'>\n        <div className = 'row'>\n          <nav className=\"navbar-brand navbar-header navbar-fixed-top navbar-right\">\n            <div className=\"container-fluid\">\n              <ul className=\"active navbar-brand navbar-right\">\n                <li className='view'>\n                 {/*  <Link to='/OrderView'>  Vista Orden </Link> */}\n                  <Link to='/OrderView'>\n                    <img src=\"back2.jpeg\" className='back' alt='back' ></img>\n                  </Link>\n                </li>\n              </ul>\n              <button className=\"btn btn-danger navbar-btn navbar-brand navbar-header\"\n                onClick = {(event)=> {\n                  event.preventDefault();\n                  readyOrders()}}>Mostrar Ordenes listas\n              </button>          \n             </div>\n          </nav>\n        </div>\n        <div className='row'>\n          <div className='row'>\n            <div className = 'col-sm-12'>\n              <div className = 'card-columns'> \n                <ul data-testid='IdItem'>\n                  { \n                    readyOrdersKitchen.map((ele, index)=>\n                      <ReadyOrders key={index} dataProduct={ele} /> \n                    )\n                  } \n                </ul> \n              </div>\n            </div>\n          </div>\n        </div>\n      </div>      \n    </section> \n  )\n  return element;\n}\nexport default ReadyOrdersKitchen;","import React from 'react';\n//import OrderKitchen from '../components/OrderKitchen';\nimport ReadyOrdersKitchen from '../components/ReadyOrdersKitchen'\nimport '../index.css';\n\n//import firebase from '../firebase';\n\nconst ReadyView = () => {\n    return (\n        <main className='container'>\n            <ReadyOrdersKitchen />\n        </main>\n    );\n}\nexport default ReadyView;","import React from 'react';\nimport {Switch, Route, HashRouter} from 'react-router-dom';\nimport OrderView from './Views/Order-View';\nimport KitchenView from './Views/Kitchen-View';\nimport ReadyView from './Views/Ready-View';\n//import Link from 'react-router-dom'\n\nconst Routes = () => {\n    return (\n      <HashRouter>\n        <Switch>\n          <Route exact path='/' component={OrderView} />\n          <Route exact path='/OrderView' component={OrderView} />\n          <Route exact path='/KitchenView' component={KitchenView} />\n          <Route exact path='/ReadyView' component={ReadyView} />\n        </Switch>\n      </HashRouter>\n    )\n}\nexport default Routes;","import React from 'react';\nimport Routes from './Route';\n//import OrderView from './Order-View'\n\nfunction App() {\n  \n  return (\n    <div className='display-flex'>\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import '../public/index.html';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n/* ReactDOM.render(<Header />, document.getElementById('root'));\nReactDOM.render(<Menu />, document.getElementById('root')); */\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}